{"version":3,"file":"static/js/958.87f893ab.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","../node_modules/@chakra-ui/icons/dist/chunk-NIMLFBFN.mjs","../node_modules/@chakra-ui/icons/dist/chunk-HFJCK6H7.mjs","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/pages/Contacts.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { filter } from '../redux/contacts/slice';\nimport {  Input } from '@chakra-ui/react';\n\nexport function Filter() {\n  const inputValue = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const handleFilterInput = event => {\n    const { value } = event.currentTarget;\n    dispatch(filter(value));\n  };\n\n  return (\n    <div\n      style={{ margin: 'auto', maxWidth: 320, marginBottom: 20, marginTop: 20 }}\n    >\n      <label>\n        Find contacts by name\n        <Input\n          className=\"input\"\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleFilterInput}\n          value={inputValue}\n        ></Input>\n      </label>\n    </div>\n  );\n}\n","// src/Phone.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\"\n});\n\nexport {\n  PhoneIcon\n};\n","// src/Delete.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: /* @__PURE__ */ jsx(\"g\", { fill: \"currentColor\", children: /* @__PURE__ */ jsx(\"path\", { d: \"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" }) })\n});\n\nexport {\n  DeleteIcon\n};\n","import '../ContactList/ContactList.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DeleteIcon, PhoneIcon } from '@chakra-ui/icons';\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../redux/contacts/contactsOperations';\nimport { Button } from '@chakra-ui/react';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const arrayOfContacts = useSelector(state => state.contacts.items);\n  const valueOfFilter = useSelector(state => state.filter);\n  const visibleContacts = arrayOfContacts.filter(contact =>\n    contact.name.toLowerCase().includes(valueOfFilter.toLowerCase())\n  );\n\n  async function deleteContactById(id) {\n    await dispatch(deleteContact(id));\n    dispatch(fetchContacts());\n  }\n\n  return (\n    <ul className=\"list\">\n      {visibleContacts.map(contact => {\n        return (\n          <li className=\"item\" key={contact.id}>\n            <p className=\"contact\">\n              <PhoneIcon />\n              {contact.name}: {contact.number}\n            </p>\n            <Button\n              colorScheme=\"red\"\n              onClick={() => deleteContactById(contact.id)}\n            >\n              <DeleteIcon />\n            </Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../ContactForm/ContactForm.css';\nimport {\n  addContact,\n  fetchContacts,\n} from '../redux/contacts/contactsOperations';\nimport { Button, Input } from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const arrayOfContacts = useSelector(state => state.contacts.items);\n  const findRepeateName = arrayOfContacts.find(contact => {\n    return contact.name.includes(name);\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('Something wrong');\n        break;\n    }\n  };\n\n  const sendData = async event => {\n    event.preventDefault();\n    if (findRepeateName) {\n      alert(`${findRepeateName.name} is already in contacts`);\n      return;\n    }\n    await dispatch(addContact({name, number}));\n    dispatch(fetchContacts());\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className=\"contactForm\" onSubmit={sendData}>\n      <label className=\"label\">\n        Name\n        <Input\n          className=\"input\"\n          onChange={handleInputChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className=\"label\">\n        Number\n        <Input\n          className=\"input\"\n          onChange={handleInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button colorScheme=\"blue\" type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n// import { fetchTasks } from 'redux/tasks/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\nimport { Filter } from '../Filter/Filter';\nimport { ContactList } from '../ContactList/ContactList';\nimport { ContactForm } from '../ContactForm/ContactForm';\n\nexport default function Contacts() {\n\n  return (\n    <main>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm></ContactForm>\n      <Filter></Filter>\n      <ContactList></ContactList>\n    </main>\n  );\n}\n"],"names":["Filter","inputValue","useSelector","state","filter","dispatch","useDispatch","style","margin","maxWidth","marginBottom","marginTop","I","className","type","name","onChange","event","value","currentTarget","PhoneIcon","createIcon","d","displayName","viewBox","DeleteIcon","path","jsx","fill","children","ContactList","arrayOfContacts","contacts","items","valueOfFilter","visibleContacts","contact","toLowerCase","includes","id","deleteContact","fetchContacts","map","number","colorScheme","onClick","deleteContactById","ContactForm","useState","setName","setNumber","findRepeateName","find","handleInputChange","console","log","sendData","preventDefault","alert","addContact","reset","onSubmit","pattern","title","required","Contacts","Helmet"],"sourceRoot":""}